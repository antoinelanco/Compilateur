# 1 "SourceLexer.mll"
 

  open Lexing
  open SourceParser

  exception Error of string

  let id_or_keyword =
    let h = Hashtbl.create 17 in
    List.iter (fun (s, k) -> Hashtbl.add h s k)
      [	(*"main",     MAIN;*)
        "var",      VAR;
        "integer",  INT;
        "boolean",  BOOLEAN;
        "while",    WHILE;
        "for",      FOR;
        "to",       TO;
      	"print",    PRINT;
        "if",       IF;
        (*"then",     THEN;*)
        "else",     ELSE;
        "true",     TRUE;
        "false",    FALSE;
      ] ;
    fun s ->
      try  Hashtbl.find h s
      with Not_found -> IDENT(s)


# 32 "SourceLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\227\255\228\255\002\000\002\000\001\000\003\000\004\000\
    \005\000\006\000\238\255\239\255\001\000\025\000\244\255\245\255\
    \246\255\247\255\248\255\249\255\250\255\251\255\021\000\088\000\
    \254\255\002\000\242\255\240\255\237\255\236\255\234\255\232\255\
    \231\255\230\255\229\255\039\000\252\255\253\255\039\000\040\000\
    \255\255\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\028\000\028\000\028\000\022\000\020\000\
    \028\000\028\000\255\255\255\255\014\000\012\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\003\000\002\000\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\002\000\002\000\
    \255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\037\000\000\000\000\000\255\255\255\255\
    \000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\025\000\024\000\025\000\000\000\025\000\000\000\025\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \025\000\008\000\025\000\000\000\000\000\000\000\005\000\032\000\
    \021\000\020\000\011\000\013\000\014\000\012\000\027\000\010\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\003\000\015\000\007\000\009\000\006\000\034\000\
    \031\000\030\000\029\000\028\000\026\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\039\000\
    \041\000\038\000\040\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\019\000\000\000\018\000\000\000\023\000\
    \000\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\017\000\004\000\016\000\033\000\023\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\000\000\000\000\000\000\000\000\023\000\
    \000\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\025\000\255\255\000\000\255\255\025\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\025\000\255\255\255\255\255\255\000\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\012\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\000\
    \006\000\007\000\008\000\009\000\013\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\022\000\022\000\022\000\035\000\
    \038\000\035\000\039\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\000\000\255\255\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\004\000\023\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\255\255\255\255\255\255\255\255\023\000\
    \255\255\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
    \023\000\023\000\023\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\035\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 37 "SourceLexer.mll"
      ( token lexbuf )
# 166 "SourceLexer.ml"

  | 1 ->
# 39 "SourceLexer.mll"
      ( new_line lexbuf; token lexbuf )
# 171 "SourceLexer.ml"

  | 2 ->
# 41 "SourceLexer.mll"
      ( id_or_keyword (lexeme lexbuf) )
# 176 "SourceLexer.ml"

  | 3 ->
# 43 "SourceLexer.mll"
      ( LITINT (int_of_string (lexeme lexbuf)) )
# 181 "SourceLexer.ml"

  | 4 ->
# 45 "SourceLexer.mll"
      ( BEGIN )
# 186 "SourceLexer.ml"

  | 5 ->
# 47 "SourceLexer.mll"
      ( END )
# 191 "SourceLexer.ml"

  | 6 ->
# 49 "SourceLexer.mll"
      ( BB )
# 196 "SourceLexer.ml"

  | 7 ->
# 51 "SourceLexer.mll"
      ( EB )
# 201 "SourceLexer.ml"

  | 8 ->
# 53 "SourceLexer.mll"
      ( BA )
# 206 "SourceLexer.ml"

  | 9 ->
# 55 "SourceLexer.mll"
      ( EA )
# 211 "SourceLexer.ml"

  | 10 ->
# 57 "SourceLexer.mll"
      ( SEMI )
# 216 "SourceLexer.ml"

  | 11 ->
# 59 "SourceLexer.mll"
      ( COMMA )
# 221 "SourceLexer.ml"

  | 12 ->
# 61 "SourceLexer.mll"
      ( ADD )
# 226 "SourceLexer.ml"

  | 13 ->
# 63 "SourceLexer.mll"
      ( INC )
# 231 "SourceLexer.ml"

  | 14 ->
# 65 "SourceLexer.mll"
      ( SUB )
# 236 "SourceLexer.ml"

  | 15 ->
# 67 "SourceLexer.mll"
      ( DEC )
# 241 "SourceLexer.ml"

  | 16 ->
# 69 "SourceLexer.mll"
      ( MULT )
# 246 "SourceLexer.ml"

  | 17 ->
# 71 "SourceLexer.mll"
      ( DIV )
# 251 "SourceLexer.ml"

  | 18 ->
# 73 "SourceLexer.mll"
      ( EQ )
# 256 "SourceLexer.ml"

  | 19 ->
# 75 "SourceLexer.mll"
      ( NEQ )
# 261 "SourceLexer.ml"

  | 20 ->
# 77 "SourceLexer.mll"
      ( LT )
# 266 "SourceLexer.ml"

  | 21 ->
# 79 "SourceLexer.mll"
      ( LE )
# 271 "SourceLexer.ml"

  | 22 ->
# 81 "SourceLexer.mll"
      ( MT )
# 276 "SourceLexer.ml"

  | 23 ->
# 83 "SourceLexer.mll"
      ( ME )
# 281 "SourceLexer.ml"

  | 24 ->
# 85 "SourceLexer.mll"
      ( AND )
# 286 "SourceLexer.ml"

  | 25 ->
# 87 "SourceLexer.mll"
      ( OR )
# 291 "SourceLexer.ml"

  | 26 ->
# 89 "SourceLexer.mll"
      ( SET )
# 296 "SourceLexer.ml"

  | 27 ->
# 91 "SourceLexer.mll"
      ( EOF )
# 301 "SourceLexer.ml"

  | 28 ->
# 93 "SourceLexer.mll"
      (
        let start_p = lexeme_start_p lexbuf in
        raise (Error ("Unknow char(s) \""
                         ^ (lexeme lexbuf)
                         ^ "\" in "
                         ^ start_p.pos_fname (* /!\ j'arrive pas à recup nom fichier *)
                         ^ " at line "
                         ^ (string_of_int start_p.pos_lnum)
                         ^ ", col "
                         ^ (string_of_int (start_p.pos_cnum - start_p.pos_bol)))))
# 315 "SourceLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 35
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 106 "SourceLexer.mll"
      ( comment lexbuf; comment lexbuf )
# 327 "SourceLexer.ml"

  | 1 ->
# 108 "SourceLexer.mll"
      ( () )
# 332 "SourceLexer.ml"

  | 2 ->
# 110 "SourceLexer.mll"
      ( comment lexbuf )
# 337 "SourceLexer.ml"

  | 3 ->
# 112 "SourceLexer.mll"
      ( failwith "Unterminated comment" )
# 342 "SourceLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

